name: Windows

on:
  push: {}
  pull_request: {}

env:
  PROJECT_NAME: "QuickCut"
  QT_VERSION: 5.15.0
  MSC_VERSION: "vc142"

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Windows Latest x64 Debug",
            os: windows-latest,
            arch: "x64",
            artifact: "Windows-x64-Debug",
            msvc: win64_msvc2019_64,
            build_type: "Debug",
            cmake_generator: "-G \"Visual Studio 16 2019\" -A x64",
            cmake_build_args: "/M",
            vs_env_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Windows Latest x64 Release",
            os: windows-latest,
            arch: "x64",
            artifact: "Windows-x64-Release",
            msvc: win64_msvc2019_64,
            build_type: "Release",
            cmake_generator: "-G \"Visual Studio 16 2019\" -A x64",
            cmake_build_args: "/M",
            vs_env_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Windows Latest x86 Debug",
            os: windows-latest,
            arch: "x86",
            artifact: "Windows-x86-Debug",
            msvc: win32_msvc2019,
            build_type: "Debug",
            cmake_generator: "-G \"Visual Studio 16 2019\" -A Win32",
            cmake_build_args: "/M",
            vs_env_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars32.bat"
          }
        - {
            name: "Windows Latest x86 Release",
            os: windows-latest,
            arch: "x86",
            artifact: "Windows-x86-Release",
            msvc: win32_msvc2019,
            build_type: "Release",
            cmake_generator: "-G \"Visual Studio 16 2019\" -A Win32",
            cmake_build_args: "/M",
            vs_env_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars32.bat"
          }

    steps:
    - uses: actions/checkout@v2

    - name: Install conan Packge-Manager
      id: install_pm
      run: |
        pip install conan
        conan -v
        conan profile new default --detect --force
        conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan

    - name: Download Qt modules
      id: qt
      uses: jurplel/install-qt-action@v2
      with:
        version: "${{ env.QT_VERSION }}"
        modules: core gui widgets
        arch: "${{ matrix.config.msvc }}"

    - name: CMake configure
      id: cmake_configure
      run: |
        mkdir build && cd build
        cmake .. ${{ matrix.config.cmake_generator }} -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}

    - name: CMake build
      id: cmake_build
      run: |
        cd build
        cmake --build . --config ${{ matrix.config.build_type }} -- ${{ matrix.config.cmake_build_args }}

    - name: Prepare deployment
      id: prepare
      if: ${{ matrix.config.os }} == 'windows-latest'
      run: |
        windeployqt ./build/bin/

    - uses: actions/upload-artifact@v2
      id: upload_artifact
      with:
        name: ${{ env.PROJECT_NAME }}-${{ matrix.config.artifact }}
        path: ./build/bin/
